# Development Docker Compose Configuration
# Use this for local development with hot-reload

version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: kandypack-mysql-dev
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-devpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-kandypackdb}
      MYSQL_USER: ${MYSQL_USER:-kandypack}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-devpassword}
      TZ: Asia/Colombo
    ports:
      - "3306:3306"
    volumes:
      - mysql_dev_data:/var/lib/mysql
      - ./Backend/schemas:/docker-entrypoint-initdb.d
    networks:
      - kandypack-dev-network

  # Backend API (with hot-reload)
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: kandypack-backend-dev
    restart: unless-stopped
    environment:
      DATABASE_URL: mysql+pymysql://${MYSQL_USER:-kandypack}:${MYSQL_PASSWORD:-devpassword}@mysql:3306/${MYSQL_DATABASE:-kandypackdb}
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${MYSQL_DATABASE:-kandypackdb}
      DB_USER: ${MYSQL_USER:-kandypack}
      DB_PASSWORD: ${MYSQL_PASSWORD:-devpassword}
      SECRET_KEY: ${SECRET_KEY:-dev-secret-key-not-for-production}
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      ENVIRONMENT: development
      DEBUG: "true"
      TZ: Asia/Colombo
    ports:
      - "8000:8000"
    volumes:
      # Mount source code for hot-reload
      - ./Backend:/app
    depends_on:
      - mysql
    networks:
      - kandypack-dev-network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend (development server with hot-reload)
  frontend:
    image: node:20-alpine
    container_name: kandypack-frontend-dev
    restart: unless-stopped
    working_dir: /app
    environment:
      VITE_API_BASE_URL: http://localhost:8000
      NODE_ENV: development
      TZ: Asia/Colombo
    ports:
      - "3000:3000"
    volumes:
      # Mount source code for hot-reload
      - ./frontend/UI:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - kandypack-dev-network
    command: sh -c "npm install --legacy-peer-deps && npm run dev -- --host 0.0.0.0"

volumes:
  mysql_dev_data:
    driver: local

networks:
  kandypack-dev-network:
    driver: bridge

